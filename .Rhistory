newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
# make a histogram, the mean and median total number of steps per day
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
#newSumByDay <- newdf %>%
#  group_by(date) %>%
#  summarize(total_steps = sum(steps),
#            mean_steps = mean(steps),
#            median_steps = median(steps))
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
#newSumByDay <- newdf %>%
#  group_by(date) %>%
#  summarize(total_steps = sum(steps),
#            mean_steps = mean(steps),
#            median_steps = median(steps))
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
#newSumByDay <- newdf %>%
#  group_by(date) %>%
#  summarize(total_steps = sum(steps),
#            mean_steps = mean(steps),
#            median_steps = median(steps))
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
#newSumByDay <- newdf %>%
#  group_by(date) %>%
#  summarize(total_steps = sum(steps),
#            mean_steps = mean(steps),
#            median_steps = median(steps))
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
#newSumByDay <- newdf %>%
#  group_by(date) %>%
#  summarize(total_steps = sum(steps),
#            mean_steps = mean(steps),
#            median_steps = median(steps))
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
mean(newSumByDay$steps)
median(newSumByDay$steps)
## differences in activity patterns between weekdays and weekends
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
## read dataset
library(dplyr)
library(ggplot2)
unzip(zipfile = "./repdata%2Fdata%2Factivity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
## mean total number of steps per day
# total, mean, median number of steps per day
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
# histogram of the total number of steps each day
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
# calculate the mean and median of the total number of steps per day
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
## average daily activity pattern
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dailyPattern[which.max(dailyPattern$steps), "interval"]
## Imputing missing values
# number of missing values
sum(is.na(df$steps))
# fill in all of the missing values with the mean for that 5-minute interval
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
# create a new dataset
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
# make a histogram, the mean and median total number of steps per day
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
mean(newSumByDay$steps)
median(newSumByDay$steps)
## differences in activity patterns between weekdays and weekends
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
library(dplyr)
library(ggplot2)
unzip("activity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
g1 <- ggplot(sumByDay, aes(x = total_steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
library(dplyr)
library(ggplot2)
unzip("activity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dailyPattern[which.max(dailyPattern$steps), "interval"]
sum(is.na(df$steps))
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
mean(newSumByDay$total_steps)
median(newSumByDay$total_steps)
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
library(dplyr)
library(ggplot2)
unzip("activity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dailyPattern[which.max(dailyPattern$steps), "interval"]
sum(is.na(df$steps))
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
mean(newSumByDay$steps)
median(newSumByDay$steps)
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
dailyPattern[which.max(dailyPattern$steps), "interval"]
## read dataset
# library(dplyr)
library(ggplot2)
unzip(zipfile = "./repdata%2Fdata%2Factivity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
## mean total number of steps per day
# total, mean, median number of steps per day
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
# histogram of the total number of steps each day
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
# calculate the mean and median of the total number of steps per day
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
## average daily activity pattern
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dailyPattern[which.max(dailyPattern$steps), "interval"]
## Imputing missing values
# number of missing values
sum(is.na(df$steps))
# fill in all of the missing values with the mean for that 5-minute interval
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
# create a new dataset
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
# make a histogram, the mean and median total number of steps per day
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
mean(newSumByDay$steps)
median(newSumByDay$steps)
## differences in activity patterns between weekdays and weekends
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
library(knitr)
library(knitr)
library("knitr", lib.loc="~/R/win-library/3.4")
knit2html(PA1_template.Rmd)
getwd()
knit2html("PA1_template.Rmd")
knit2html("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
render_html("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
render_html("PA1_template.Rmd")
render("PA1_template.Rmd")
render("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("PA1_template.md")
knit2html("PA1_template.md")
getwd()
knit2html("./GitHub/RepData_PeerAssessment1/PA1_template.md")
source('~/AI/JH/JH-5/PA1_template.R')
library("knitr", lib.loc="~/R/win-library/3.4")
library("knitr", lib.loc="~/R/win-library/3.4")
knit("PA1_template.Rmd")
knit("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
dev.off()
knit("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
knit("./GitHub/RepData_PeerAssessment1/PA1_template.Rmd")
setwd("./GitHub/RepData_PeerAssessment1")
library("knitr", lib.loc="~/R/win-library/3.4")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit("PA1_template.Rmd")
library(ggplot2)
unzip("activity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
dev.copy(png, "g1.png")
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dev.copy(png, "g2.png")
dailyPattern[which.max(dailyPattern$steps), "interval"]
sum(is.na(df$steps))
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
dev.copy(png, "g3.png")
mean(newSumByDay$steps)
median(newSumByDay$steps)
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
dev.copy(png, "g4.png")
library(ggplot2)
unzip("activity.zip")
df <- read.csv("activity.csv")
df$date <- as.Date(df$date)
sumByDay <- aggregate(steps ~ date, df, FUN = sum)
g1 <- ggplot(sumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,12,by=2))
print(g1)
dev.copy(png, "g1.png")
mean(sumByDay$steps, na.rm = TRUE)
median(sumByDay$steps, na.rm = TRUE)
dailyPattern <- aggregate(steps ~ interval, df, FUN = mean)
g2 <- ggplot(dailyPattern, aes(interval, steps)) +
geom_line() +
labs(title = "The average daily activity pattern") +
labs(x = "5-minute interval") +
labs(y = "average number of steps")
print(g2)
dev.copy(png, "g2.png")
dailyPattern[which.max(dailyPattern$steps), "interval"]
sum(is.na(df$steps))
dfNA <- df[which(is.na(df$steps)), ]
dfNA$steps <- replace(dfNA$steps, dfNA$interval %in%
dailyPattern$interval, dailyPattern$steps)
dfAvailable <- df[which(!is.na(df$steps)), ]
newdf <- rbind(dfAvailable, dfNA)
newdf <- newdf[order(newdf$date, newdf$interval), ]
newSumByDay <- aggregate(steps ~ date, newdf, FUN = sum)
g3 <- ggplot(newSumByDay, aes(x = steps)) +
geom_histogram(binwidth=1000, fill="#993435", colour = "black",
boundary=0) +
labs(title = "Histogram of the total number of steps taken each day
after NA complement") +
labs(x = "total number of steps per day") +
labs(y = "number of days") +
scale_y_continuous(breaks=seq(0,20,by=2))
print(g3)
dev.copy(png, "g3.png")
mean(newSumByDay$steps)
median(newSumByDay$steps)
Sys.setlocale("LC_TIME","us")
newdf$dayofWeek <- as.factor(weekdays(newdf$date))
newdf$weekend <- as.factor(ifelse(newdf$dayofWeek=="Saturday" |
newdf$dayofWeek=="Sunday", "weekend", "weekday"))
WeekendPattern <- aggregate(steps ~ interval + weekend, newdf, FUN = mean)
g4 <- ggplot(WeekendPattern, aes(interval, steps)) +
geom_line(aes(colour = weekend)) +
labs(title = "The average daily activity pattern
weekday vs. weekend     ") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ weekend, ncol = 1) +
labs(x = "5-minute interval") +
labs(y = "average number of steps") +
theme(legend.position = 'none')
print(g4)
dev.copy(png, "g4.png")
getwd()
